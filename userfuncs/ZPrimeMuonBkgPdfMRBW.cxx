/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "ZPrimeMuonBkgPdfMRBW.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(ZPrimeMuonBkgPdfMRBW) 

 ZPrimeMuonBkgPdfMRBW::ZPrimeMuonBkgPdfMRBW(const char *name, const char *title, 
                        RooAbsReal& _mass,
                        RooAbsReal& _bkg_a,
                        RooAbsReal& _bkg_b,
                        RooAbsReal& _bkg_c,
                        RooAbsReal& _bkg_d
   ):
   RooAbsPdf(name,title), 
   mass("mass","mass",this,_mass),
   bkg_a(" bkg_a"," bkg_a",this,_bkg_a),
   bkg_b(" bkg_b"," bkg_b",this,_bkg_b),
   bkg_c(" bkg_c"," bkg_c",this,_bkg_c),
   bkg_d(" bkg_d"," bkg_d",this,_bkg_d)
 {
 }


 ZPrimeMuonBkgPdfMRBW::ZPrimeMuonBkgPdfMRBW(const ZPrimeMuonBkgPdfMRBW& other, const char* name) :  
   RooAbsPdf(other,name), 
   mass("mass",this,other.mass),
   bkg_a("bkg_a",this,other.bkg_a),
   bkg_b("bkg_b",this,other.bkg_b),
   bkg_c("bkg_c",this,other.bkg_c),
   bkg_d("bkg_d",this,other.bkg_d)
 { 
 } 



 Double_t ZPrimeMuonBkgPdfMRBW::evaluate() const 
 {
	if (mass < 91.1876) return 0;
	double denom = ( pow(mass,2.) / ( pow((mass*mass-91.1876*91.1876),bkg_b) + pow((mass*mass*(2.4952/91.1876)),bkg_b) ) )* TMath::Exp(bkg_c*(mass/100.)+bkg_d*(mass/100.)*(mass/100.));
	return denom;
	//return std::numeric_limits<double>::infinity();
 }
